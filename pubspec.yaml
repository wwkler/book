name: book_project
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.6 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
    
  # 상태 관리 라이브러리
  get: ^4.6.5
 
  # Lottie는 Bodymovin을 사용하여 json으로 내보낸 Adobe After Effects 애니메이션을 구문 분석 하고 모바일에서 기본적으로 렌더링하는 Android 및 iOS용 모바일 라이브러리
  lottie: ^2.3.2

  # fonts.google.com의 글꼴을 사용하는 Flutter 라이브러리
  google_fonts: ^4.0.3

  # 이메일로 OTP을 전송하는 라이브러리
  email_otp: ^2.0.1

  # 유동적인 애니메이션이 포함된 아름다운 Bottom Navigation Bar 라이브러리
  fluid_bottom_nav_bar: ^1.4.0

  # search bar 라이브러리
  anim_search_bar: ^2.0.3

  # tap하면 영역이 넓어지는 라이브러리
  tap_to_expand: ^0.6.1
   
  # Card 라이브러리
  stacked_card_carousel: ^0.0.4

  # 달력 라이브러리
  table_calendar: ^3.0.9

  # 다국어 언어 번역 라이브러리
  intl: ^0.18.1

  # (NTP) 네트워크 시간 프로토콜 서버에서 정확한 시간 또는 현재 DateTime 개체를 가져오는 라이브러리
  ntp: ^2.0.0

  # 안정적인 드롭다운 메뉴와 필요에 따라 맞춤설정할 수 있는 다양한 옵션이 포함된 Flutter의 핵심 드롭다운 버튼 위젯 라이브러리
  dropdown_button2: ^2.1.0

  # 카메라를 통해 사진을 얻거나, 갤러리를 통해 사진을 얻을 수 있는 라이브러리
  image_picker: ^0.8.7

  # rating_bar 라이브러리
  flutter_rating_bar: ^4.0.1

  # 서버와 통신하기 위한 라이브러리
  dio: ^5.1.1

  # 사용자의 uid를 저장하기 위한 라이브러리
  uuid: ^3.0.7

  # url에 대한 페이지로 이동하는 라이브러리
  url_launcher: ^6.1.11

  # 화면 및 글꼴 크기를 조정하기 위한 플러터 플러그인. 다양한 모델에서 잘 보이도록 보장하는 라이브러리
  flutter_screenutil: ^5.7.0




  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2


dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/imgs/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
